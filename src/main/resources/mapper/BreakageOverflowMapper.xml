<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hero.repository.BreakageOverflowMapper" >
  <resultMap id="BaseResultMap" type="com.hero.entity.BreakageOverflow" >
    <id column="bo_id" property="boId" jdbcType="INTEGER" />
    <result column="bo_e_id" property="boEId" jdbcType="INTEGER" />
    <result column="bo_createtime" property="boCreatetime" jdbcType="TIMESTAMP" />
    <result column="bo_number" property="boNumber" jdbcType="INTEGER" />
    <result column="bo_remark" property="boRemark" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    bo_id, bo_e_id, bo_createtime, bo_number, bo_remark
  </sql>
  <!--添加报损报溢单(thx)  -->
  <insert id="insertBreakageOverflow" parameterType="int" >
   INSERT INTO i_breakage_overflow(bo_e_id,bo_createtime)
      VALUES(#{eid},NOW())
  </insert>
  <!--查询上次执行报损报报溢自增值(thx)  -->
  <select id="selectMaxboid" resultType="java.lang.Integer" parameterType="java.lang.Integer">
    SELECT MAX(bo_id) FROM i_breakage_overflow where bo_e_id=#{eid}
   </select>
  
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from i_breakage_overflow
    where bo_id = #{boId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from i_breakage_overflow
    where bo_id = #{boId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.hero.entity.BreakageOverflow" >
    insert into i_breakage_overflow (bo_id, bo_e_id, bo_createtime, 
      bo_number, bo_remark)
    values (#{boId,jdbcType=INTEGER}, #{boEId,jdbcType=INTEGER}, #{boCreatetime,jdbcType=TIMESTAMP}, 
      #{boNumber,jdbcType=INTEGER}, #{boRemark,jdbcType=VARCHAR})
  </insert>
  
  
  <insert id="insertSelective" parameterType="com.hero.entity.BreakageOverflow" >
    insert into i_breakage_overflow
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="boId != null" >
        bo_id,
      </if>
      <if test="boEId != null" >
        bo_e_id,
      </if>
      <if test="boCreatetime != null" >
        bo_createtime,
      </if>
      <if test="boNumber != null" >
        bo_number,
      </if>
      <if test="boRemark != null" >
        bo_remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="boId != null" >
        #{boId,jdbcType=INTEGER},
      </if>
      <if test="boEId != null" >
        #{boEId,jdbcType=INTEGER},
      </if>
      <if test="boCreatetime != null" >
        #{boCreatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="boNumber != null" >
        #{boNumber,jdbcType=INTEGER},
      </if>
      <if test="boRemark != null" >
        #{boRemark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hero.entity.BreakageOverflow" >
    update i_breakage_overflow
    <set >
      <if test="boEId != null" >
        bo_e_id = #{boEId,jdbcType=INTEGER},
      </if>
      <if test="boCreatetime != null" >
        bo_createtime = #{boCreatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="boNumber != null" >
        bo_number = #{boNumber,jdbcType=INTEGER},
      </if>
      <if test="boRemark != null" >
        bo_remark = #{boRemark,jdbcType=VARCHAR},
      </if>
    </set>
    where bo_id = #{boId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hero.entity.BreakageOverflow" >
    update i_breakage_overflow
    set bo_e_id = #{boEId,jdbcType=INTEGER},
      bo_createtime = #{boCreatetime,jdbcType=TIMESTAMP},
      bo_number = #{boNumber,jdbcType=INTEGER},
      bo_remark = #{boRemark,jdbcType=VARCHAR}
    where bo_id = #{boId,jdbcType=INTEGER}
  </update>
</mapper>